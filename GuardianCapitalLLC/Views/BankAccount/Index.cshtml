@model BankAccountsView
@using System.Text.RegularExpressions

<div class="mt-2">
	<div class="card bg-gray-200 bd-0">
		<div class="card-body">
			<div class="list-group-item list-group-item-action border-0">
				<div class="media mt-0">
					<div class="media-body">
						<div class="d-flex align-items-center">
							<div class="mt-0">
								<h5 class="mb-1 tx-20 font-weight-bold text-dark">@Model.FullName</h5>
							</div>
							<div class="ms-auto wd-45p tx-14">
								<div class="float-end">
									<h5 class="mb-1 tx-12 font-weight-sembold text-dark">Total Account Balance</h5>
									<p class="mb-0 tx-20 text-success">$@Model.TotalBalance</p>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<div class="mt-2">
	<div class="card bg-gray-200 bd-0">
		<div class="card-body">
			<div class="text-wrap">
				<div class="bg-gray-100 nav-bg">
					<nav class="nav nav-tabs">
						<a class="nav-link @(TempData["ActiveTab"]?.ToString() == "Overview" ? "active" : "")" data-bs-toggle="tab" href="#tabCont1"><i class="fas fa-dollar-sign"></i> Account Overview</a>
						<a class="nav-link @(TempData["ActiveTab"]?.ToString() == "Transfer" ? "active" : "")" data-bs-toggle="tab" href="#tabCont2"><i class="fas fa-exchange-alt"></i> Transfer Funds</a>
						<a class="nav-link @(TempData["ActiveTab"]?.ToString() == "AddBalance" ? "active" : "")" data-bs-toggle="tab" href="#tabCont3"><i class="fa fa-plus"></i> Add Balance</a>
						<a class="nav-link @(TempData["ActiveTab"]?.ToString() == "WithdrawBalance" ? "active" : "")" data-bs-toggle="tab" href="#tabCont4"><i class="fa fa-minus"></i> Withdraw Balance</a>
					</nav>
				</div>
			</div>
		</div>
	</div>
</div>
@if (TempData["ErrorMessage"] != null)
{
	<div class="card bg-warning text-white">
		<div class="card-body d-flex align-items-center p-3">
			<i class="fas fa-exclamation-circle me-2"></i>
			<div class="validation-summary-no-bullets flex-grow-1">@TempData["ErrorMessage"]</div>
		</div>
	</div>
}
<div class="tab-content">
	<div class="tab-pane @(TempData["ActiveTab"]?.ToString() == "Overview" ? "active show" : "")" id="tabCont1">
		@foreach (var BankAccount in Model.BankAccounts)
		{
			<div class="mt-2">
				<div class="card bg-gray-200 bd-0">
					<div class="card-body">
						<div class="text-wrap">
							<div class="card-body">
								<div class="media-body">
									<div class="d-flex align-items-center">
										<div class="mt-0">
											<h5 class="mb-1 tx-20 font-weight-bold text-dark">@Regex.Replace(BankAccount.Type.ToString(), "(\\B[A-Z])", " $1") Account</h5>
										</div>
										<div class="ms-auto wd-45p tx-14">
											<div class="float-end">
												<p class="mb-0 tx-20 text-dark">$@BankAccount.Balance</p>
												<h5 class="mb-1 tx-12 font-weight-sembold text-dark">Available Balance</h5>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		}
	</div>
	<div class="tab-pane @(TempData["ActiveTab"]?.ToString() == "Transfer" ? "active show" : "")" id="tabCont2">
		<div class="mt-2">
			<div class="card bg-gray-200 bd-0">
				<div class="card-body">
					<h5 class="tx-dark tx-medium mg-b-10">Transfer funds between accounts</h5>
					<form asp-action="Transfer" method="post">
						<input type="hidden" asp-for="UserId" />
						<div class="form-group">
							<label for="fromAccount">From Account</label>
							<select class="form-control" name="fromAccountId" id="fromAccount">
								<option disabled selected value="">-- Select source account --</option>
								@foreach (var acc in Model.BankAccounts)
								{
									<option value="@acc.Id">@Regex.Replace(acc.Type.ToString(), "(\\B[A-Z])", " $1") - $@acc.Balance</option>
								}
							</select>
						</div>

						<div class="form-group mt-2">
							<label for="toAccount">To Account</label>
							<select class="form-control" name="toAccountId" id="toAccount">
								<option disabled selected value="">-- Select destination account --</option>
								@foreach (var acc in Model.BankAccounts)
								{
									<option value="@acc.Id">@Regex.Replace(acc.Type.ToString(), "(\\B[A-Z])", " $1") - $@acc.Balance</option>
								}
							</select>
						</div>

						<div class="form-group">
							<label for="amount">Amount</label>
							<div class="input-group mb-3">
								<span class="input-group-text" id="basic-addon1">$</span>
								<input type="text" name="amount" class="form-control" step="0.01" min="0.01" />
							</div>	
						</div>

						<button type="submit" class="btn btn-primary mt-3">
							<i class="fas fa-exchange-alt"></i> Transfer Funds
						</button>
					</form>
				</div>
			</div>
		</div>
	</div>
	<div class="tab-pane @(TempData["ActiveTab"]?.ToString() == "AddBalance" ? "active show" : "")" id="tabCont3">
		<div class="mt-2">
			<div class="card bg-gray-200 bd-0">
				<div class="card-body">
					<h5 class="tx-dark tx-medium mg-b-10">Add balance to account</h5>
					@if (!ViewData.ModelState.IsValid)
					{
						<div class="card bg-warning text-white">
							<div class="card-body d-flex align-items-center p-3">
								<i class="fas fa-exclamation-circle me-2"></i>
								<div asp-validation-summary="ModelOnly" class="validation-summary-no-bullets flex-grow-1"></div>
							</div>
						</div>
					}
					<form asp-action="AddBalance" method="post">
						<input type="hidden" asp-for="UserId" />
						<div class="form-group">
							<label for="Account">Select Account</label>
							<select class="form-control" name="AccountId" id="Account">
								<option disabled selected value="">-- Select account to add balance --</option>
								@foreach (var acc in Model.BankAccounts)
								{
									<option value="@acc.Id">@Regex.Replace(acc.Type.ToString(), "(\\B[A-Z])", " $1") - $@acc.Balance</option>
								}
							</select>
						</div>

						<div class="form-group">
							<label for="amount">Amount to Add</label>
							<div class="input-group mb-3">
								<span class="input-group-text" id="basic-addon1">$</span>
								<input type="text" name="amount" class="form-control" step="0.01" min="0.01" />
							</div>
						</div>

						<button type="submit" class="btn btn-primary mt-3">
							<i class="fa fa-plus"></i> Add Balance
						</button>
					</form>
				</div>
			</div>
		</div>
	</div>
	<div class="tab-pane @(TempData["ActiveTab"]?.ToString() == "WithdrawBalance" ? "active show" : "")" id="tabCont4">
		<div class="mt-2">
			<div class="card bg-gray-200 bd-0">
				<div class="card-body">
					<h5 class="tx-dark tx-medium mg-b-10">Withdraw balance from account</h5>
					@if (!ViewData.ModelState.IsValid)
					{
						<div class="card bg-warning text-white">
							<div class="card-body d-flex align-items-center p-3">
								<i class="fas fa-exclamation-circle me-2"></i>
								<div asp-validation-summary="ModelOnly" class="validation-summary-no-bullets flex-grow-1"></div>
							</div>
						</div>
					}
					<form asp-action="WithdrawBalance" method="post">
						<input type="hidden" asp-for="UserId" />
						<div class="form-group">
							<label for="Account">Select Account</label>
							<select class="form-control" name="AccountId" id="Account">
								<option disabled selected value="">-- Select account to withdraw balance --</option>
								@foreach (var acc in Model.BankAccounts)
								{
									<option value="@acc.Id">@Regex.Replace(acc.Type.ToString(), "(\\B[A-Z])", " $1") - $@acc.Balance</option>
								}
							</select>
						</div>

						<div class="form-group">
							<label for="amount">Amount to Withdraw</label>
							<div class="input-group mb-3">
								<span class="input-group-text" id="basic-addon1">$</span>
								<input type="text" name="amount" class="form-control" step="0.01" min="0.01" />
							</div>
						</div>

						<button type="submit" class="btn btn-primary mt-3">
							<i class="fa fa-minus"></i> Withdraw Balance
						</button>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	document.addEventListener('DOMContentLoaded', function () {
		const fromSelect = document.getElementById('fromAccount');
		const toSelect = document.getElementById('toAccount');

		function updateToOptions() {
			const selectedFrom = fromSelect.value;
			for (const option of toSelect.options) {
				option.disabled = option.value === selectedFrom;
			}
		}

		fromSelect.addEventListener('change', updateToOptions);

		// Run once on load in case a default is selected
		updateToOptions();
	});
</script>